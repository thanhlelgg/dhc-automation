import { Client, RectReturn } from "webdriver";
import { Browser } from "webdriverio";
import { IGondolaMobile } from "../builtin";
declare const Appium: any;
export declare class AppiumEx extends Appium implements IGondolaMobile {
    private mainBrowser?;
    private browser?;
    private $$;
    _startBrowser(): Promise<void>;
    _after(): Promise<void>;
    tap(element: string | ILocator): Promise<any>;
    runOnAndroid(options?: any, fn?: Function): Promise<void>;
    runOnIOS(options?: any, fn?: Function): Promise<void>;
    checkAppIsInstalled(appPackageId: string): Promise<void>;
    switchDevice(deviceName: string): Promise<void>;
    runOnAllDevices(): void;
    getCurrentBrowser(): Promise<Client & Browser>;
    getCapabilities(): Promise<any>;
    sendDeviceKeyEvent(keyValue: string | number): Promise<void>;
    swipe(element: string | ILocator, offsetX: number, offsetY: number): Promise<void>;
    swipeByCoordinates(startX: number, startY: number, offsetX: number, offsetY: number): Promise<void>;
    getElementBounds(element: string | ILocator): Promise<{
        left: number;
        top: number;
        width: number;
        height: number;
    }>;
    grabNumberOfVisibleElements(element: string | ILocator): Promise<any>;
    grabAttributeFrom(element: string | ILocator, attr: string): Promise<any>;
    hideDeviceKeyboard(strategy?: string, key?: string): Promise<any>;
    getDeviceScreenSize(): Promise<RectReturn>;
    getAllContexts(): Promise<string[]>;
    getContext(): Promise<string>;
    switchToContext(context: string): Promise<any>;
    executeCommand(command: string, args?: Array<string | object | number | boolean | undefined>): Promise<any>;
    scrollIntoView(element: string | ILocator): Promise<void>;
    setPickerValue(element: string | ILocator, values: string | Array<string | undefined>, pickCompletedElement?: string | ILocator): Promise<void>;
    private delay;
    private _getElementLocation;
    private _getElementSize;
    private _isMultiRemote;
    private _parseLocator;
}
export {};
