"use strict";var __decorate=this&&this.__decorate||function(t,e,r,o){var i,n=arguments.length,a=n<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,r,o);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(a=(n<3?i(a):n>3?i(e,r,a):i(e,r))||a);return n>3&&a&&Object.defineProperty(e,r,a),a},__importStar=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e};Object.defineProperty(exports,"__esModule",{value:!0});const util_1=require("util"),errors=__importStar(require("../errors")),util_2=require("./../util"),deco_1=require("../deco"),Appium=require("codeceptjs/lib/helper/Appium"),Locator=require("codeceptjs/lib/locator");class AppiumEx extends Appium{async _startBrowser(){await super._startBrowser(),this._isMultiRemote()&&(this.mainBrowser=this.browser)}async _after(){this._isMultiRemote()&&(this.browser=this.mainBrowser,this.$$=this.browser.$$.bind(this.browser)),await super._after()}async tap(t){if(this.isWeb)throw new errors.NotAppError;if(util_2.isEmpty(t))throw new errors.LocatorEmptyError;let e=[];if(0===(e=await this._locate(this._parseLocator.call(this,t),!0)).length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));{const t=e[0],r="tap";return this.browser.touchAction({action:r,element:t})}}async runOnAndroid(t,e){await super.runOnAndroid(t,e)}async runOnIOS(t,e){await super.runOnIOS(t,e)}async checkAppIsInstalled(t){await super.seeAppIsInstalled(t)}async switchDevice(t){if(!this._isMultiRemote())throw new errors.NotMultiremoteError;if(!this.mainBrowser||!this.mainBrowser.hasOwnProperty(t))throw new errors.DeviceNotFoundError(t);this.browser=this.mainBrowser[t],this.browser.$name=t,this.$$=this.browser.$$.bind(this.browser)}runOnAllDevices(){if(!this._isMultiRemote())throw new errors.NotMultiremoteError;this.browser=this.mainBrowser,this.$$=this.browser.$$.bind(this.browser)}async getCurrentBrowser(){return this.browser}async getCapabilities(){return(await this.getCurrentBrowser()).capabilities}async sendDeviceKeyEvent(t){if(util_1.isNullOrUndefined(t))throw new errors.GError(errors.GErrorKey.ArgKeyValueNotSet);const e="number"==typeof t?t.toString():t;return await super.sendDeviceKeyEvent(e)}async swipe(t,e,r){const o=await this.getElementBounds(t),i=o.left+o.width/2,n=o.top+o.height/2;await this.swipeByCoordinates(i,n,e,r)}async swipeByCoordinates(t,e,r,o){try{await this.browser.touchPerform([{action:"press",options:{x:t,y:e}},{action:"wait",options:{ms:500}},{action:"moveTo",options:{x:t+r,y:e+o}},{action:"release",options:{}}])}catch(t){if(t.name&&t.name.match(/invalid coordinates/gi))throw new errors.GError(errors.GErrorKey.SwipeOffofScreen);throw t}}async getElementBounds(t){let e=[];if(0===(e=this.isWeb?await this._locate(t):await this._locate(this._parseLocator.call(this,t))).length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));const r=e[0],o=await this._getElementLocation(r),i=o.x,n=o.y,a=await this._getElementSize(r);return{left:i,top:n,width:a.width,height:a.height}}async grabNumberOfVisibleElements(t){return this.isWeb?await super.grabNumberOfVisibleElements(t):await super.grabNumberOfVisibleElements(this._parseLocator.call(this,t))}async grabAttributeFrom(t,e){return this.isWeb?await super.grabAttributeFrom(t,e):await super.grabAttributeFrom(this._parseLocator.call(this,t),e)}async hideDeviceKeyboard(t,e){return await super.hideDeviceKeyboard(t,e)}async getDeviceScreenSize(){const t=await this.getCurrentBrowser();return await t.getWindowSize()}async getAllContexts(){return super.grabAllContexts()}async getContext(){return super.grabContext()}async switchToContext(t){if(""===t)throw new errors.InvalidInputArgumentError("context");return super._switchToContext(t)}async executeCommand(t,e){if(""===t)throw new errors.InvalidInputArgumentError("command");const r=await this.getCurrentBrowser();return e?r.executeScript(t,e):r.executeScript(t,[])}async scrollIntoView(t){if(!1===(await this.getContext()).includes("WEBVIEW"))throw new errors.GError(errors.GErrorKey.UnsupportedContext);if(util_2.isEmpty(t))throw new errors.LocatorEmptyError;const e=await this._locate(t,!0);if(0===e.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));e[0].scrollIntoView()}async setPickerValue(t,e,r){let o=[];if(0===(o=this.isWeb?await this._locate(t):await this._locate(this._parseLocator.call(this,t))).length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));const i=o[0];let n=[];if("ios"===this.platform?n=await i.$$("//XCUIElementTypePickerWheel"):"android"===this.platform&&(n=await i.$$("//android.widget.NumberPicker")),0===n.length)throw new errors.ElementNotSupportError(util_2.getLocatorString(t));if(e instanceof Array&&n.length!==e.length)throw new errors.InvalidInputArgumentError(e.toString());const a=await this.getCurrentBrowser();for(let t=0;t<n.length;t++){if(void 0===e[t])continue;let r;r=e instanceof Array?e[t]:e;try{let o;if("ios"===this.platform)await a.setValueImmediate(n[t].elementId,r),o=await n[t].getText();else if("android"===this.platform){const e=await n[t].$$("//*");if(0===e.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(n[t]));let i=e[e.length/2];const a=await i.getText();o=await i.getText();const s="tap";let c=!1,l=!1;for(;o!==r&&!l;){let t=e[e.length/2+1],r=e[e.length/2-1];const n=o;if(a!==await t.getText()&&!1===c){await this.browser.touchAction({action:s,element:t}),await this.delay(100),i=e[e.length/2],o=await i.getText(),t=e[e.length/2+1],await t.getText()===a&&(l=!0)}n===o&&(c=!0,r=e[e.length/2-1],await this.browser.touchAction({action:s,element:r}),await this.delay(100),i=e[e.length/2],n===(o=await i.getText())&&(l=!0))}}if(o!==r)throw e instanceof Array?new errors.ValueNotMatchAtIndexError(util_2.getLocatorString((t+1).toString())):new errors.ValueNotMatchError(util_2.getLocatorString(r))}catch(t){throw t}}}async delay(t){return new Promise(e=>setTimeout(e,t))}async _getElementLocation(t){return await t.getLocation()}async _getElementSize(t){return await t.getSize()}_isMultiRemote(){return this.config.multiremote}_parseLocator(t){if(!t)return null;if("object"==typeof t){if(t.web&&this.isWeb)return this._parseLocator.call(this,t.web);if(t.android&&"android"===this.platform)return this._parseLocator.call(this,t.android);if(t.ios&&"ios"===this.platform)return this._parseLocator.call(this,t.ios)}if("string"==typeof t){if("~"===t[0])return t;if("//"===t.substr(0,2))return t;if("#"===t[0]&&!this.isWeb)return this._parseLocator.call(this,{id:t.slice(1)});if("android"===this.platform&&!this.isWeb)return`android=new UiSelector().text("${t}")`}if("css"===(t=new Locator(t,"xpath")).type&&!this.isWeb)throw new errors.GError(errors.GErrorKey.UsingCSSLocatorInApp);if("name"===t.type&&!this.isWeb)throw new errors.GError(errors.GErrorKey.UsingNameLocatorInNative);return"id"!==t.type||this.isWeb||"android"!==this.platform?t.simplify():`//*[@resource-id='${t.value}']`}}__decorate([deco_1.action("tap","")],AppiumEx.prototype,"tap",null),__decorate([deco_1.action("run on Android","")],AppiumEx.prototype,"runOnAndroid",null),__decorate([deco_1.action("run on IOS","")],AppiumEx.prototype,"runOnIOS",null),__decorate([deco_1.action("check app is installed","")],AppiumEx.prototype,"checkAppIsInstalled",null),__decorate([deco_1.action("switch device","")],AppiumEx.prototype,"switchDevice",null),__decorate([deco_1.action("run on all devices","")],AppiumEx.prototype,"runOnAllDevices",null),__decorate([deco_1.action("get current browser","")],AppiumEx.prototype,"getCurrentBrowser",null),__decorate([deco_1.action("get capabilities","")],AppiumEx.prototype,"getCapabilities",null),__decorate([deco_1.action("send device key event","")],AppiumEx.prototype,"sendDeviceKeyEvent",null),__decorate([deco_1.action("swipe","")],AppiumEx.prototype,"swipe",null),__decorate([deco_1.action("swipe by coordinates","")],AppiumEx.prototype,"swipeByCoordinates",null),__decorate([deco_1.action("get element bounds","")],AppiumEx.prototype,"getElementBounds",null),__decorate([deco_1.action("grab number of visible elements","")],AppiumEx.prototype,"grabNumberOfVisibleElements",null),__decorate([deco_1.action("grab attribute from","")],AppiumEx.prototype,"grabAttributeFrom",null),__decorate([deco_1.action("hide device keyboard","")],AppiumEx.prototype,"hideDeviceKeyboard",null),__decorate([deco_1.action("get device screen size","")],AppiumEx.prototype,"getDeviceScreenSize",null),__decorate([deco_1.action("get all contexts","")],AppiumEx.prototype,"getAllContexts",null),__decorate([deco_1.action("get context","")],AppiumEx.prototype,"getContext",null),__decorate([deco_1.action("switch to context","")],AppiumEx.prototype,"switchToContext",null),__decorate([deco_1.action("execute command","")],AppiumEx.prototype,"executeCommand",null),__decorate([deco_1.action("scroll into view","")],AppiumEx.prototype,"scrollIntoView",null),__decorate([deco_1.action("set picker value","")],AppiumEx.prototype,"setPickerValue",null),exports.AppiumEx=AppiumEx,module.exports=AppiumEx;
//# sourceMappingURL=../../debug/helper/AppiumEx.js.map
