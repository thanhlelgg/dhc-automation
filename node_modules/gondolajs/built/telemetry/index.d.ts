import { EventCategory, EventName, UserTimingVariable } from "./constant";
export { EventCategory, EventName, UserTimingVariable } from "./constant";
export interface IAnalyzer {
    event(eventCategory: EventCategory, eventName: EventName): void;
    error(description: string, fatal: boolean): void;
    time(category: EventCategory, timingVariable: UserTimingVariable, timeInMS: number, label?: string): void;
}
export declare const IAnalyzerSym: unique symbol;
export declare function sendTelemetryEvent(eventCategory: EventCategory, eventName: EventName, startTime?: number, durationMs?: number, properties?: any, ex?: Error): void;
export declare function captureTelemetry(eventCategory: EventCategory, eventName: EventName, properties?: any, captureDuration?: boolean): (_target: Object, _propertyKey: string, descriptor: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
