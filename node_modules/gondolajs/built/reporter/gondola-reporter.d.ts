import { ReporterOptions, ISuite } from "./types";
export declare class GondolaReporter {
    config: ReporterOptions;
    suites: any[];
    startTime: Date;
    endTime: Date;
    private currentSuite?;
    private internalSuites;
    private internalSpecs;
    private currentSpec?;
    env: any;
    private fakeFocusedSuite;
    constructor(config: ReporterOptions);
    report(msg: string): void;
    reportPic(msg: string, pic: string | {
        [label: string]: string;
    }): void;
    suiteStarted(suit: ISuite): void;
    specStarted(result: any): void;
    specDone(result: any): void;
    suiteDone(result: any): void;
    start(): void;
    done(): void;
    startKeywordStep(id: number, keyword: string, args: any[], actions: string, stepDuration: string): void;
    endKeywordStep(id: number, keyword: string, args: any[], actions: string, stepDuration: string): void;
    updateStepDuration(stepDuration: string): void;
    private getSuite;
    private getSpec;
    private updateSpec;
    private pushMsg;
    private collectKeywordStep;
    private collectFailures;
    private getScreenshot;
}
